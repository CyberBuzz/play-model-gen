package ${packageConcrete};

import java.util.Date;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.Table;

import ${packageAbstract}.${meta.abstractEntityName};

import constant.Flg;
import play.db.ebean.Model;
import jp.co.cyberbuzz.play.PlayDateTime;

/**
 *
 * @author play-model-gen
 *
 */
@Entity
@Table(name = "${meta.table.name}")
public class ${meta.entityName} extends ${meta.abstractEntityName} {

    // serialVesrionUID
    private static final long serialVersionUID = 1L;

    // ResourceName
    private static final String RESOURCE_NAME = "master";

    // ModelFinder
    public static Model.Finder<Long, ${meta.entityName}> find = new Model.Finder<Long, ${meta.entityName}>(RESOURCE_NAME, Long.class, ${meta.entityName}.class);

    /**
     * 指定したIDに一致し、論理削除されていないレコードを返します。
     * @param id ID
     * @return 結果
     */
    public static ${meta.entityName} findAliveById(long id) {
      ${meta.entityName} result = find.where()
                        .eq("id", id).eq("deleteFlg", Flg.OFF.getValue()).findUnique();
        return result;
    }

    /**
     * 論理削除されていないレコードを全件取得します。
     * @return 結果
     */
    public static List<${meta.entityName}> findAliveAll() {
        return find.where()
                   .eq("deleteFlg", Flg.OFF.getValue()).findList();
    }

    /**
     * 登録処理
     */
    @Override
    public void save() {
        Date now = PlayDateTime.now().toDate();
        this.deleteFlg = false;
        this.createDate = now;
        this.updateDate = now;
        super.save(RESOURCE_NAME);
    }

    /**
     * 更新処理
     */
    @Override
    public void update() {
        Date now = PlayDateTime.now().toDate();
        this.updateDate = now;
        super.update(RESOURCE_NAME);
    }

    /**
     * 更新処理
     * @param obj Entityオブジェクト
     */
    @Override
    public void update(Object obj) {
        Date now = PlayDateTime.now().toDate();
        this.updateDate = now;
        super.update(obj, RESOURCE_NAME);
    }

    // @OneToMany area
}